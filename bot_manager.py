#!/usr/bin/env python3
"""
Bot Manager - –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞–º–∏
"""
import subprocess
import sys
import time
import signal
import os

class BotManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ –±–æ—Ç–∞"""
    
    @staticmethod
    def find_bot_processes():
        """–ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã run_v2.py"""
        try:
            result = subprocess.run(['ps', 'aux'], capture_output=True, text=True)
            processes = []
            
            for line in result.stdout.split('\n'):
                if 'run_v2.py' in line and 'grep' not in line:
                    parts = line.split()
                    if len(parts) >= 2:
                        pid = parts[1]
                        processes.append(pid)
            
            return processes
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")
            return []
    
    @staticmethod
    def kill_all_bots():
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–æ–≤"""
        processes = BotManager.find_bot_processes()
        
        if not processes:
            print("‚úÖ –ë–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return True
        
        print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(processes)} –±–æ—Ç–æ–≤: {', '.join(processes)}")
        
        for pid in processes:
            try:
                os.kill(int(pid), signal.SIGTERM)
                print(f"üõë –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –±–æ—Ç PID {pid}")
            except ProcessLookupError:
                print(f"‚ö†Ô∏è  –ë–æ—Ç PID {pid} —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ PID {pid}: {e}")
        
        # –ñ–¥–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º
        time.sleep(2)
        remaining = BotManager.find_bot_processes()
        
        if remaining:
            print(f"üíÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ {len(remaining)} –±–æ—Ç–æ–≤...")
            for pid in remaining:
                try:
                    os.kill(int(pid), signal.SIGKILL)
                    print(f"üíÄ KILL PID {pid}")
                except:
                    pass
        
        print("‚úÖ –í—Å–µ –±–æ—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    
    @staticmethod
    def status():
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –±–æ—Ç–æ–≤"""
        processes = BotManager.find_bot_processes()
        
        if not processes:
            print("‚úÖ –ë–æ—Ç—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã")
        else:
            print(f"ü§ñ –ó–∞–ø—É—â–µ–Ω–æ –±–æ—Ç–æ–≤: {len(processes)}")
            for pid in processes:
                print(f"  - PID {pid}")
        
        return len(processes)
    
    @staticmethod
    def start_bot():
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞"""
        # –°–Ω–∞—á–∞–ª–∞ —É–±–∏–≤–∞–µ–º –≤—Å–µ
        BotManager.kill_all_bots()
        
        print("üöÄ –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞...")
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ background
            process = subprocess.Popen(['python3', 'run_v2.py'], 
                                     stdout=subprocess.PIPE, 
                                     stderr=subprocess.PIPE)
            
            # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
            time.sleep(3)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            if process.poll() is None:
                print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å PID {process.pid}")
                return process.pid
            else:
                stdout, stderr = process.communicate()
                print(f"‚ùå –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º {process.returncode}")
                if stderr:
                    print(f"–û—à–∏–±–∫–∞: {stderr.decode()[:200]}")
                return None
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
            return None

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        print("""
ü§ñ Bot Manager - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Telegram –±–æ—Ç–∞–º–∏

–ö–æ–º–∞–Ω–¥—ã:
  status     - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–æ–≤  
  kill       - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –±–æ—Ç—ã
  start      - –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ—Ç
  restart    - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
        """)
        return
    
    command = sys.argv[1]
    manager = BotManager()
    
    if command == 'status':
        manager.status()
    elif command == 'kill':
        manager.kill_all_bots()
    elif command == 'start':
        manager.start_bot()
    elif command == 'restart':
        manager.kill_all_bots()
        time.sleep(1)
        manager.start_bot()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")

if __name__ == "__main__":
    main()